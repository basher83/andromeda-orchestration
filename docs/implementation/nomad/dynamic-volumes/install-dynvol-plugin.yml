---
- name: Install Nomad dynamic host volume plugin (ext4) + remount unit
  hosts: nomad_clients
  become: true

  vars:
    plugin_path: /opt/nomad/plugins/ext4-volume
    unit_path: /etc/systemd/system/nomad-dynvol@.service

  tasks:
    - name: Ensure directories exist
      file: { path: /opt/nomad/volumes/dynamic/.registry, state: directory, mode: '0755' }

    - name: Deploy plugin script
      copy:
        dest: "{{ plugin_path }}"
        mode: '0755'
        content: |
          #!/usr/bin/env bash
          set -euo pipefail
          BASE="/opt/nomad/volumes/dynamic"; REG="$BASE/.registry"; UNIT="nomad-dynvol@"
          log(){ echo "[ext4-volume] $*" >&2; }
          ensure_dirs(){ mkdir -p "$BASE" "$REG"; }
          img_of(){ echo "$BASE/$1.img"; }
          mnt_of(){ echo "$BASE/$1"; }
          meta_of(){ echo "$REG/$1.env"; }
          write_meta(){ printf 'ID=%s\nIMG=%s\nMNT=%s\n' "$1" "$(img_of "$1")" "$(mnt_of "$1")" >"$(meta_of "$1")"; }
          create(){ local id="$1" size_gb="$2"; ensure_dirs; local img="$(img_of "$id")" mnt="$(mnt_of "$id")"; [[ -e "$img" || -d "$mnt" ]] && { echo "$mnt"; exit 0; }; truncate -s "${size_gb}G" "$img"; mkfs.ext4 -F "$img" >/dev/null; mkdir -p "$mnt"; mount -o loop,noatime,nodiratime "$img" "$mnt"; write_meta "$id"; systemctl enable --now "${UNIT}${id}.service" >/dev/null 2>&1 || true; echo "$mnt"; }
          remount(){ local id="$1" img="$(img_of "$id")" mnt="$(mnt_of "$id")"; [[ -f "$img" ]] || { log "missing image: $img"; exit 1; }; mkdir -p "$mnt"; mountpoint -q "$mnt" || mount -o loop,noatime,nodiratime "$img" "$mnt"; echo "$mnt"; }
          delete(){ local id="$1" img="$(img_of "$id")" mnt="$(mnt_of "$id")" meta="$(meta_of "$id")"; systemctl disable --now "${UNIT}${id}.service" >/dev/null 2>&1 || true; mountpoint -q "$mnt" && umount "$mnt" || true; rm -rf "$mnt" "$img" "$meta"; }
          path(){ echo "$(mnt_of "$1")"; }
          case "${1:-}" in create) shift; create "$@";; remount) shift; remount "$@";; delete) shift; delete "$@";; path) shift; path "$@";; *) echo "usage: $0 {create <id> <size_gb>|remount <id>|delete <id>|path <id>}"; exit 1;; esac

    - name: Deploy systemd unit
      copy:
        dest: "{{ unit_path }}"
        mode: '0644'
        content: |
          [Unit]
          Description=Mount Nomad dynamic volume %i
          After=local-fs.target
          ConditionPathExists=/opt/nomad/volumes/dynamic/%i.img
          [Service]
          Type=oneshot
          ExecStart=/opt/nomad/plugins/ext4-volume remount %i
          RemainAfterExit=yes
          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd
      command: systemctl daemon-reload
