---
# Test DNS resolution through PowerDNS
- name: Test DNS Resolution
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars:
    # PowerDNS server IP (can be overridden in inventory/group_vars/host_vars)
    powerdns_ip: "{{ powerdns_ip | default('192.168.11.20', true) }}"

    # Domain variables (provided by inventory)
    homelab_domain: "{{ homelab_domain | default('spaceships.work', true) }}"
    cluster_subdomain: "{{ cluster_subdomain | default('', true) }}"
    fqdn_suffix: "{{ fqdn_suffix | default(cluster_subdomain ~ '.' ~ homelab_domain if cluster_subdomain else homelab_domain, true) }}"

    test_queries:
      # Forward lookups
      - query: "lloyd.{{ homelab_domain }}"
        type: "A"
        expected: "192.168.11.11"
      - query: "holly.{{ homelab_domain }}"
        type: "A"
        expected: "192.168.11.12"
      - query: "mable.{{ homelab_domain }}"
        type: "A"
        expected: "192.168.11.13"
      - query: "nomad-server-1.{{ homelab_domain }}"
        type: "A"
        expected: "192.168.10.11"
      - query: "netbox.{{ homelab_domain }}"
        type: "A"
        expected: "192.168.30.213"
      - query: "powerdns.{{ homelab_domain }}"
        type: "A"
        expected: "192.168.11.20"
      - query: "dns.{{ homelab_domain }}"
        type: "CNAME"
        expected: "powerdns.{{ homelab_domain }}"
      # Reverse lookups
      - query: "192.168.11.11"
        type: "PTR"
        expected: "lloyd.{{ homelab_domain }}"
      - query: "192.168.11.12"
        type: "PTR"
        expected: "holly.{{ homelab_domain }}"
      - query: "192.168.30.213"
        type: "PTR"
        expected: "netbox.{{ homelab_domain }}"

  tasks:
    - name: Test forward DNS lookups
      command: "dig @{{ powerdns_ip }} {{ item.query }} {{ item.type }} +short"
      loop: "{{ test_queries }}"
      when: item.type in ['A', 'CNAME']
      register: forward_results
      changed_when: false

    - name: Test reverse DNS lookups
      command: "dig @{{ powerdns_ip }} -x {{ item.query }} +short"
      loop: "{{ test_queries }}"
      when: item.type == 'PTR'
      register: reverse_results
      changed_when: false

    - name: Compile test results
      set_fact:
        test_results: []

    - name: Process forward lookup results
      set_fact:
        test_results: "{{ test_results + [{'query': item.item.query, 'type': item.item.type, 'expected': item.item.expected, 'actual': item.stdout | default('NO ANSWER'), 'status': (item.stdout | default('') == item.item.expected) | ternary('✓ PASS', '✗ FAIL')}] }}"
      loop: "{{ forward_results.results }}"
      when: item.skipped is not defined

    - name: Process reverse lookup results
      set_fact:
        test_results: "{{ test_results + [{'query': item.item.query, 'type': item.item.type, 'expected': item.item.expected, 'actual': item.stdout | default('NO ANSWER') | regex_replace('\\.$', ''), 'status': (item.stdout | default('') | regex_replace('\\.$', '') == item.item.expected) | ternary('✓ PASS', '✗ FAIL')}] }}"
      loop: "{{ reverse_results.results }}"
      when: item.skipped is not defined

    - name: Display test results header
      debug:
        msg:
          - "======================================"
          - "     DNS Resolution Test Results      "
          - "======================================"
          - "PowerDNS Server: {{ powerdns_ip }}"
          - ""

    - name: Display individual test results
      debug:
        msg: "{{ item.status }} | {{ item.type }} | {{ item.query }} -> {{ item.actual }} (expected: {{ item.expected }})"
      loop: "{{ test_results }}"

    - name: Calculate test summary
      set_fact:
        passed_tests: "{{ test_results | selectattr('status', 'search', 'PASS') | list | length }}"
        failed_tests: "{{ test_results | selectattr('status', 'search', 'FAIL') | list | length }}"
        total_tests: "{{ test_results | length }}"

    - name: Display test summary
      debug:
        msg:
          - ""
          - "======================================"
          - "            Test Summary              "
          - "======================================"
          - "Total Tests: {{ total_tests }}"
          - "Passed: {{ passed_tests }}"
          - "Failed: {{ failed_tests }}"
          - "Success Rate: {{ ((passed_tests | int / total_tests | int) * 100) | round(2) }}%"
          - ""
          - "{% if failed_tests | int == 0 %}✓ All tests passed! DNS integration is working correctly.{% else %}✗ Some tests failed. Please check the configuration.{% endif %}"

    - name: Test zone transfer (AXFR)
      command: "dig @{{ powerdns_ip }} {{ homelab_domain }} AXFR +short"
      register: axfr_result
      changed_when: false
      failed_when: false

    - name: Display zone transfer results
      debug:
        msg:
          - ""
          - "Zone Transfer Test (AXFR):"
          - "{{ axfr_result.stdout_lines | default(['Zone transfer not allowed or no records']) }}"
