---
# Setup Vault secrets for PowerDNS deployment
# Uses community.hashi_vault collection for Vault operations

- name: Setup PowerDNS Vault Secrets
  hosts: localhost
  gather_facts: no
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
    # Vault connection - using the working nomad-server-1 address
    vault_addr: "http://192.168.10.11:8200"
    vault_token: "root"  # Dev mode token

    # PowerDNS database credentials
    pdns_db_password: "pdns-dev-password"
    pdns_api_key: "{{ lookup('password', '/tmp/pdns_api_key chars=ascii_letters,digits,hexdigits length=32') }}"

    # PostgreSQL superuser password (for initial setup)
    postgres_superuser_password: "temporary-dev-password"

  tasks:
    - name: Check current Vault configuration
      debug:
        msg: |
          Vault Configuration:
          - Address: {{ vault_addr }}
          - Token: {{ vault_token }}

    - name: Enable KV secrets engine if needed
      community.hashi_vault.vault_write:
        url: "{{ vault_addr }}"
        auth_method: token
        token: "{{ vault_token }}"
        path: sys/mounts/kv
        data:
          type: kv
          description: "Key/Value secrets engine for infrastructure"
      register: kv_enable
      failed_when: false

    - name: Write PowerDNS secrets to Vault KV v1
      community.hashi_vault.vault_write:
        url: "{{ vault_addr }}"
        auth_method: token
        token: "{{ vault_token }}"
        path: kv/pdns
        data:
          db_password: "{{ pdns_db_password }}"
          api_key: "{{ pdns_api_key }}"
      register: pdns_secret_write

    - name: Write PostgreSQL secrets to Vault KV v1
      community.hashi_vault.vault_write:
        url: "{{ vault_addr }}"
        auth_method: token
        token: "{{ vault_token }}"
        path: kv/postgres
        data:
          superuser_password: "{{ postgres_superuser_password }}"
      register: postgres_secret_write

    - name: Read back PowerDNS secrets to verify
      community.hashi_vault.vault_read:
        url: "{{ vault_addr }}"
        auth_method: token
        token: "{{ vault_token }}"
        path: kv/pdns
      register: pdns_secret_read

    - name: Read back PostgreSQL secrets to verify
      community.hashi_vault.vault_read:
        url: "{{ vault_addr }}"
        auth_method: token
        token: "{{ vault_token }}"
        path: kv/postgres
      register: postgres_secret_read

    - name: Display verification results
      debug:
        msg: |
          âœ… Vault secrets configured successfully!

          PowerDNS secrets available at kv/pdns:
          - db_password: [REDACTED - {{ pdns_secret_read.data.data.db_password | length }} chars]
          - api_key: [REDACTED - {{ pdns_secret_read.data.data.api_key | length }} chars]

          PostgreSQL secrets available at kv/postgres:
          - superuser_password: [REDACTED - {{ postgres_secret_read.data.data.superuser_password | length }} chars]

          To retrieve via CLI:
          export VAULT_ADDR='{{ vault_addr }}'
          export VAULT_TOKEN='{{ vault_token }}'
          vault kv get kv/pdns
          vault kv get kv/postgres

    - name: Create script for easy secret retrieval
      copy:
        content: |
          #!/bin/bash
          # PowerDNS Vault Secret Retrieval Script
          # Generated: {{ ansible_date_time.iso8601 }}

          export VAULT_ADDR='{{ vault_addr }}'
          export VAULT_TOKEN='{{ vault_token }}'

          echo "PowerDNS Database Password:"
          vault kv get -field=db_password kv/pdns

          echo ""
          echo "PowerDNS API Key:"
          vault kv get -field=api_key kv/pdns

          echo ""
          echo "PostgreSQL Superuser Password:"
          vault kv get -field=superuser_password kv/postgres
        dest: /tmp/get-powerdns-secrets.sh
        mode: '0755'
      delegate_to: localhost

    - name: Final instructions
      debug:
        msg: |
          ========================================
          PowerDNS Vault Setup Complete!
          ========================================

          Next steps:
          1. The PostgreSQL job is already running with temporary credentials
          2. Deploy PowerDNS Mode A configuration which will use these Vault secrets
          3. Run: nomad job run nomad-jobs/platform-services/.testing/mode-a/powerdns-testing.nomad.hcl

          To retrieve secrets manually:
          /tmp/get-powerdns-secrets.sh

          Current Consul KV configuration:
          - pdns/db/host = 192.168.11.20
          - pdns/db/port = 26560
          - pdns/db/name = powerdns
          - pdns/db/user = pdns
