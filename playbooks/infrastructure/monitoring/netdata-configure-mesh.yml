---
# Configure Netdata Parent Mesh Topology
# This creates a full mesh between all parent nodes across both clusters

- name: Configure mesh streaming on doggos-homelab parents
  hosts: lloyd,holly,mable
  become: true
  gather_facts: true
  
  roles:
    - role: netdata
      tags: netdata
  
  tasks:
    - name: Ensure firewall allows mesh connections from og-homelab
      community.general.ufw:
        rule: allow
        port: '19999'
        src: '192.168.30.0/24'
        comment: "Netdata mesh from og-homelab"
      when: ansible_facts['os_family'] == "Debian"
      ignore_errors: true

- name: Configure mesh streaming on og-homelab parent
  hosts: pve1
  become: true
  gather_facts: true
  
  roles:
    - role: netdata
      tags: netdata
  
  tasks:
    - name: Ensure firewall allows mesh connections from doggos-homelab
      community.general.ufw:
        rule: allow
        port: '19999'
        src: '192.168.10.0/24'
        comment: "Netdata mesh from doggos-homelab"
      when: ansible_facts['os_family'] == "Debian"
      ignore_errors: true

- name: Verify mesh connectivity
  hosts: lloyd,holly,mable,pve1
  become: true
  gather_facts: false
  serial: 1
  
  tasks:
    - name: Wait for Netdata to stabilize
      ansible.builtin.wait_for:
        port: 19999
        timeout: 30
      ignore_errors: true
    
    - name: Check streaming connections
      ansible.builtin.shell: |
        ss -tan | grep :19999 | grep ESTAB | wc -l
      register: connection_count
      changed_when: false
    
    - name: Get Netdata API info
      ansible.builtin.uri:
        url: "http://localhost:19999/api/v1/info"
        method: GET
      register: netdata_info
    
    - name: Display mesh status
      ansible.builtin.debug:
        msg:
          - "Node: {{ inventory_hostname }}"
          - "Active connections: {{ connection_count.stdout }}"
          - "Expected connections: ~{{ (groups['netdata_parents'] | default([]) | length) + 1 }}"
    
    - name: Test connectivity to other parents
      ansible.builtin.wait_for:
        host: "{{ item }}"
        port: 19999
        timeout: 10
      loop:
        - "{{ '192.168.10.11' if inventory_hostname != 'lloyd' else '192.168.30.50' }}"
        - "{{ '192.168.10.12' if inventory_hostname != 'holly' else '192.168.30.50' }}"
        - "{{ '192.168.10.13' if inventory_hostname != 'mable' else '192.168.30.50' }}"
      when: item != ansible_default_ipv4.address
      ignore_errors: true
      register: connectivity_test
    
    - name: Report connectivity issues
      ansible.builtin.debug:
        msg: "WARNING: Cannot reach {{ item.item }}"
      loop: "{{ connectivity_test.results | default([]) }}"
      when: item.failed | default(false)

- name: Generate mesh topology report
  hosts: localhost
  gather_facts: false
  
  tasks:
    - name: Create mesh topology diagram
      ansible.builtin.copy:
        content: |
          # Netdata Parent Mesh Topology
          Generated: {{ ansible_date_time.iso8601 }}
          
          ## Mesh Architecture
          
          ```
          doggos-homelab                           og-homelab
          ==============                           ==========
          
          lloyd (10.11) <----+---+---+-----------> pve1 (30.50)
              ^              |   |   |               ^
              |              |   |   |               |
              v              |   |   |               |
          holly (10.12) <----+   |   +---------------+
              ^                  |                   |
              |                  |                   |
              v                  |                   |
          mable (10.13) <--------+-------------------+
          
          Legend:
          - Each parent streams to all other parents
          - Bidirectional replication
          - Full mesh topology (n*(n-1) connections)
          - Total connections: 12 (4 nodes * 3 peers each)
          ```
          
          ## Parent Nodes
          
          ### doggos-homelab (10G internal network)
          - lloyd: 192.168.10.11:19999 (dual-NIC)
          - holly: 192.168.10.12:19999 (dual-NIC)
          - mable: 192.168.10.13:19999 (dual-NIC)
          
          ### og-homelab (2.5G network)
          - pve1: 192.168.30.50:19999
          
          ## Mesh Benefits
          
          1. **Unified View**: Access all metrics from any parent node
          2. **Redundancy**: If one parent fails, data is available from others
          3. **Cross-Cluster**: View doggos metrics from og-homelab and vice versa
          4. **Load Distribution**: Query any parent for reduced load
          
          ## Access URLs
          
          From any parent node, you can view metrics for:
          - All doggos-homelab nodes (VMs and physical)
          - All og-homelab containers and VMs
          - Combined infrastructure view
          
          Primary access points:
          - http://lloyd:19999 (doggos primary)
          - http://192.168.30.50:19999 (og primary)
          
        dest: "{{ playbook_dir }}/../../reports/netdata-mesh-topology-{{ ansible_date_time.date }}.md"
        mode: '0644'
    
    - name: Display completion message
      ansible.builtin.debug:
        msg:
          - "Netdata parent mesh configuration complete"
          - "All parent nodes now replicate to each other"
          - "Total parent nodes in mesh: 4"
          - "Access any parent to view all infrastructure metrics"