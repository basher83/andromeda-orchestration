---
# Deploy Consul TLS Configuration to Vault Nodes
# Task: PKI-002 - Configure Consul Auto-Encrypt
# Parent Issue: 98 - mTLS for Service Communication
#
# This playbook deploys TLS certificates to Vault nodes running Consul agents
#
# Usage:
# uv run ansible-playbook playbooks/infrastructure/vault/deploy-consul-tls-vault-nodes.yml \
#   -i inventory/environments/vault-cluster/production.yaml

- name: Deploy TLS Configuration to Vault Nodes (Consul Clients)
  hosts: vault_cluster
  become: true
  gather_facts: true
  vars:
    consul_tls_dir: /opt/consul/tls
    consul_config_dir: /etc/consul.d
    local_cert_dir: /tmp/consul-certs

  tasks:
    - name: Create TLS directory
      ansible.builtin.file:
        path: "{{ consul_tls_dir }}"
        state: directory
        owner: consul
        group: consul
        mode: '0755'

    - name: Check if CA certificate exists locally
      ansible.builtin.stat:
        path: "{{ local_cert_dir }}/ca.crt"
      delegate_to: localhost
      run_once: true
      register: ca_cert_check
      become: false

    - name: Ensure certificates are available
      ansible.builtin.assert:
        that:
          - ca_cert_check.stat.exists
        fail_msg: "CA certificate not found at {{ local_cert_dir }}/ca.crt. Run generate-consul-certs.sh first."
        success_msg: "CA certificate found"
      run_once: true

    - name: Read CA certificate content
      ansible.builtin.slurp:
        src: "{{ local_cert_dir }}/ca.crt"
      delegate_to: localhost
      register: ca_cert_content
      become: false
      run_once: true

    - name: Deploy CA certificate to Vault nodes
      ansible.builtin.copy:
        content: "{{ ca_cert_content.content | b64decode }}"
        dest: "{{ consul_tls_dir }}/ca.crt"
        owner: consul
        group: consul
        mode: '0644'

    - name: Check current Consul configuration
      ansible.builtin.stat:
        path: "{{ consul_config_dir }}/consul.hcl"
      register: consul_config

    - name: Backup existing Consul configuration
      ansible.builtin.copy:
        src: "{{ consul_config_dir }}/consul.hcl"
        dest: "{{ consul_config_dir }}/consul.hcl.backup.{{ ansible_date_time.epoch }}"
        remote_src: true
      when: consul_config.stat.exists

    - name: Configure Consul client for Auto-Encrypt
      ansible.builtin.blockinfile:
        path: "{{ consul_config_dir }}/consul.hcl"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - TLS Configuration"
        block: |
          # TLS Configuration for Consul Client (Vault Node)
          ca_file = "{{ consul_tls_dir }}/ca.crt"

          # Client TLS settings
          verify_outgoing = true
          verify_server_hostname = true

          # Enable Auto-Encrypt to get certificates from server
          auto_encrypt {
            tls = true
          }
        create: true
        owner: consul
        group: consul
        mode: '0644'

    - name: Validate Consul configuration
      ansible.builtin.command: consul validate {{ consul_config_dir }}
      register: consul_validate
      changed_when: false

    - name: Display validation result
      ansible.builtin.debug:
        msg: "Consul configuration validation: {{ consul_validate.stdout }}"

    - name: Restart Consul service
      ansible.builtin.systemd:
        name: consul
        state: restarted
        daemon_reload: true
      register: consul_restart

    - name: Wait for Consul to be ready
      ansible.builtin.wait_for:
        port: 8301
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 60

    - name: Check Consul service status
      ansible.builtin.systemd:
        name: consul
      register: consul_status

    - name: Display configuration status
      ansible.builtin.debug:
        msg:
          - "âœ… Consul client {{ inventory_hostname }} configured for Auto-Encrypt"
          - "   - CA certificate deployed to {{ consul_tls_dir }}/ca.crt"
          - "   - Auto-Encrypt TLS enabled in configuration"
          - "   - Service status: {{ consul_status.status.ActiveState }}"

- name: Validate Consul Auto-Encrypt on Vault Nodes
  hosts: vault_cluster
  become: true
  gather_facts: false
  run_once: true

  tasks:
    - name: Check Consul members from Vault node
      ansible.builtin.command: consul members
      register: consul_members
      changed_when: false
      ignore_errors: true

    - name: Check if Auto-Encrypt is working
      ansible.builtin.shell: |
        journalctl -u consul -n 50 --no-pager | grep -i "auto.encrypt" || echo "No auto-encrypt messages found"
      register: auto_encrypt_logs
      changed_when: false

    - name: Test HTTPS API endpoint
      ansible.builtin.uri:
        url: "https://127.0.0.1:8501/v1/agent/self"
        method: GET
        validate_certs: false
        status_code: [200, 401, 403]  # 401/403 if ACLs are enabled
      register: https_test
      ignore_errors: true

    - name: Display validation results
      ansible.builtin.debug:
        msg:
          - "ðŸ“Š Consul Auto-Encrypt Status on Vault Nodes"
          - ""
          - "Cluster Members:"
          - "{{ consul_members.stdout_lines if consul_members is not failed else ['Unable to get members - may need server configuration'] }}"
          - ""
          - "Auto-Encrypt Logs:"
          - "{{ auto_encrypt_logs.stdout_lines | last(5) }}"
          - ""
          - "HTTPS API Status: {{ 'Available' if https_test is not failed else 'Not available yet' }}"
          - ""
          - "ðŸ“‹ Next Steps:"
          - "   1. Deploy configuration to Consul servers"
          - "   2. Enable Auto-Encrypt on servers"
          - "   3. Verify all clients get certificates automatically"
