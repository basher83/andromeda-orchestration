---
# Setup Master Vault with Transit Engine for Auto-Unseal
# This creates the transit backend and auto-unseal token

- name: Configure Master Vault Transit Engine
  hosts: "{{ target_hosts | default('nomad-server-1-lloyd') }}"
  gather_facts: true

  vars:
    vault_addr: "http://{{ ansible_default_ipv4.address }}:8200"
    # Use Infisical lookup for root token - NO HARDCODED SECRETS
    vault_token: "{{ lookup('infisical.vault.read_secrets',
                       env='prod',
                       path='/apollo-13/vault',
                       secret_name='VAULT_DEV_ROOT_TOKEN') }}"

  pre_tasks:
    - name: Validate Infisical token is available
      ansible.builtin.fail:
        msg: "VAULT_DEV_ROOT_TOKEN not found in Infisical at /apollo-13/vault"
      when: vault_token is undefined or vault_token == ""

  tasks:
    - name: Wait for master Vault to be ready
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/sys/health"
        method: GET
      register: vault_health
      until: vault_health.status == 200
      retries: 12
      delay: 5

    - name: Enable transit secrets engine
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/sys/mounts/transit"
        method: POST
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body_format: json
        body:
          type: "transit"
          description: "Auto-unseal transit engine for production Vault cluster"
        status_code: [200, 204]

    - name: Create auto-unseal key
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/transit/keys/autounseal"
        method: POST
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body_format: json
        body:
          type: "aes256-gcm96"
        status_code: [200, 204]

    - name: Create auto-unseal policy
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/sys/policies/acl/autounseal"
        method: PUT
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body_format: json
        body:
          policy: |
            # Auto-unseal policy for production Vault cluster
            path "transit/encrypt/autounseal" {
              capabilities = ["update"]
            }
            path "transit/decrypt/autounseal" {
              capabilities = ["update"]
            }
        status_code: [200, 204]

    - name: Create auto-unseal token
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/auth/token/create"
        method: POST
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body_format: json
        body:
          policies: ["autounseal"]
          ttl: "0"  # No expiration
          renewable: false
          display_name: "auto-unseal-token"
          meta:
            purpose: "auto-unseal for production cluster"
      register: autounseal_token_result

    - name: Display master Vault status
      ansible.builtin.debug:
        msg:
          - "âœ… Master Vault configured successfully!"
          - ""
          - "Master Vault Address: {{ vault_addr }}"
          - "Transit Engine: Enabled at /transit"
          - "Auto-unseal Key: autounseal (aes256-gcm96)"
          - "Auto-unseal Token: {{ autounseal_token_result.json.auth.client_token[:8] }}...{{ autounseal_token_result.json.auth.client_token[-4:] }} (masked)"
          - ""
          - "Next: Store the auto-unseal token in Infisical and deploy production cluster"

    - name: Save token for next steps
      ansible.builtin.set_fact:
        vault_autounseal_token: "{{ autounseal_token_result.json.auth.client_token }}"

    - name: Store auto-unseal token in Infisical
      ansible.builtin.debug:
        msg:
          - "Store this token in Infisical:"
          - "Path: /apollo-13/vault/transit-token"
          - "Value: {{ vault_autounseal_token[:8] }}...{{ vault_autounseal_token[-4:] }} (masked - use variable above)"
          - ""
          - "Use this command to store it:"
          - "infisical secrets set VAULT_TRANSIT_TOKEN='{{ vault_autounseal_token }}' --path='/apollo-13/vault' --env=prod"
