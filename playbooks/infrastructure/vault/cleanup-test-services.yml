---
# Clean up test services from Consul
# Usage:
# uv run ansible-playbook playbooks/infrastructure/vault/cleanup-test-services.yml \
#   -i inventory/environments/vault-cluster/production.yaml

- name: Clean Up Test Services from Consul
  hosts: vault_cluster
  gather_facts: false

  tasks:
    - name: Get node-specific token from Infisical
      ansible.builtin.set_fact:
        node_token_name: "CONSUL_TOKEN_{{ inventory_hostname | upper | replace('-', '_') }}"
        cacheable: no
        quiet_logging: true

    - name: Retrieve token from Infisical
      ansible.builtin.shell: |
        infisical secrets get {{ node_token_name }} --env=prod --path=/apollo-13/vault --plain
      delegate_to: localhost
      become: false
      register: consul_token_result
      no_log: true
      environment:
        INFISICAL_UNIVERSAL_AUTH_CLIENT_ID: "{{ lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID') }}"
        INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET: "{{ lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET') }}"
      changed_when: false

    - name: List local services to find test services
      ansible.builtin.uri:
        url: 'http://127.0.0.1:8500/v1/agent/services'
        method: GET
        headers:
          X-Consul-Token: '{{ consul_token_result.stdout }}'
        status_code: 200
      register: local_services
      become: true
      no_log: true

    - name: Find test services
      ansible.builtin.set_fact:
        test_services: >-
          {{ local_services.json | dict2items | selectattr('key', 'match', '^test-.*')
             | map(attribute='key') | list }}

    - name: Display test services found
      ansible.builtin.debug:
        msg: 'Found test services on {{ inventory_hostname }}: {{ test_services }}'
      when: test_services | length > 0

    - name: Deregister test services
      ansible.builtin.uri:
        url: 'http://127.0.0.1:8500/v1/agent/service/deregister/{{ item }}'
        method: PUT
        headers:
          X-Consul-Token: '{{ consul_token_result.stdout }}'
        status_code: 200
      loop: '{{ test_services }}'
      become: true
      when: test_services | length > 0
      no_log: true

    - name: Summary
      ansible.builtin.debug:
        msg:
          - '{{ inventory_hostname }}: Removed {{ test_services | length }} test service(s)'

- name: Verify Cleanup from Consul Server
  hosts: nomad-server-1-lloyd
  gather_facts: false

  pre_tasks:
    - name: Retrieve Consul master token securely
      ansible.builtin.include_tasks: "{{ playbook_dir }}/../../../tasks/infisical-secret-lookup.yml"
      vars:
        secret_name: 'CONSUL_MASTER_TOKEN'
        secret_var_name: 'consul_token'
        fallback_env_var: 'CONSUL_MASTER_TOKEN'
        infisical_path: '/apollo-13/consul'
      tags: [secrets]

  tasks:
    - name: Set master token from Infisical lookup
      ansible.builtin.set_fact:
        master_token: '{{ consul_token }}'
      delegate_to: localhost
      become: false

    - name: Retrieve master token if not already set
      ansible.builtin.shell: |
        infisical secrets get CONSUL_MASTER_TOKEN --env=prod --path=/apollo-13/consul --plain
      delegate_to: localhost
      become: false
      register: consul_token_result
      changed_when: false
      when: master_token == ""
      no_log: true
      environment:
        INFISICAL_UNIVERSAL_AUTH_CLIENT_ID: "{{ lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID') }}"
        INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET: "{{ lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET') }}"

    - name: Set token from retrieval
      ansible.builtin.set_fact:
        consul_token: '{{ consul_token_result.stdout }}'
      when: consul_token_result.stdout is defined
      no_log: true

    - name: Check remaining services
      ansible.builtin.shell: |
        set -o pipefail
        consul catalog services -token="{{ consul_token | default(master_token) }}" \
          | grep -E "(test-|vault)" || echo "No test services found"
      register: remaining_services
      changed_when: false
      become: true
      no_log: true

    - name: Display final status
      ansible.builtin.debug:
        msg:
          - 'âœ… Test Service Cleanup Complete'
          - 'Remaining relevant services:'
          - '{{ remaining_services.stdout }}'
