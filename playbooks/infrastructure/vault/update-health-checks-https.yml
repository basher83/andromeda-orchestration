---
# Update Vault health checks to use HTTPS
# Usage:
# uv run ansible-playbook playbooks/infrastructure/vault/update-health-checks-https.yml -i inventory/environments/vault-cluster/production.yaml

- name: Update Vault Health Checks to HTTPS
  hosts: vault_production
  gather_facts: true

  tasks:
    - name: Get node-specific token from Infisical
      set_fact:
        node_token_name: "CONSUL_TOKEN_{{ inventory_hostname | upper | replace('-', '_') }}"

    - name: Retrieve token from Infisical
      ansible.builtin.shell: |
        infisical secrets get {{ node_token_name }} --env=prod --path=/apollo-13/vault --plain
      delegate_to: localhost
      become: false
      register: consul_token_result
      environment:
        INFISICAL_UNIVERSAL_AUTH_CLIENT_ID: "{{ lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID') }}"
        INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET: "{{ lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET') }}"
      changed_when: false

    - name: Update Vault service with HTTPS health check
      ansible.builtin.uri:
        url: "http://127.0.0.1:8500/v1/agent/service/register"
        method: PUT
        headers:
          X-Consul-Token: "{{ consul_token_result.stdout }}"
        body_format: json
        body:
          ID: "vault-{{ inventory_hostname }}"
          Name: "vault"
          Tags:
            - "vault-cluster"
            - "{{ vault_role }}"
            - "{{ 'transit' if vault_role == 'master' else 'raft' }}"
            - "https"
          Port: 8200
          Address: "{{ ansible_default_ipv4.address }}"
          Check:
            CheckID: "vault-health"
            Name: "Vault Health Check"
            HTTP: "https://{{ ansible_default_ipv4.address }}:8200/v1/sys/health?standbyok=true&perfstandbyok=true"
            TLSSkipVerify: true
            Interval: "10s"
            Timeout: "5s"
        status_code: 200
      become: true

    - name: Display update result
      ansible.builtin.debug:
        msg:
          - "âœ… Health check updated to HTTPS for {{ inventory_hostname }}"
