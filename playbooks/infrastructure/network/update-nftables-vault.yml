---
# Update nftables configuration to allow Vault port 8200
# This playbook applies the updated nftables template that includes Vault access

- name: Update nftables configuration for Vault access
  hosts: tag_nomad
  become: true
  gather_facts: true
  
  tasks:
    - name: Include system_base role to apply nftables configuration
      include_role:
        name: system_base
        tasks_from: configure-firewall
      when: false  # Skip if the task doesn't exist

    - name: Apply nftables configuration template directly
      ansible.builtin.template:
        src: "../../../roles/system_base/templates/nftables.conf.j2"
        dest: /etc/nftables.conf
        mode: '0644'
        owner: root
        group: root
        backup: true
      register: nftables_updated

    - name: Reload nftables if configuration changed
      ansible.builtin.systemd:
        name: nftables
        state: reloaded
      when: nftables_updated.changed

    - name: Ensure nftables is enabled and running
      ansible.builtin.systemd:
        name: nftables
        enabled: true
        state: started

    - name: Verify nftables rules
      ansible.builtin.command:
        cmd: nft list ruleset
      register: nft_rules
      changed_when: false

    - name: Verify required ports are open
      ansible.builtin.debug:
        msg: |
          Firewall port status:
          - SSH (22): {{ 'OPEN' if '22' in nft_rules.stdout else 'CLOSED' }}
          - Nomad (4646): {{ 'OPEN' if '4646' in nft_rules.stdout else 'CLOSED' }}
          - Consul (8500): {{ 'OPEN' if '8500' in nft_rules.stdout else 'CLOSED' }}
          - Vault (8200): {{ 'OPEN' if '8200' in nft_rules.stdout else 'CLOSED' }}
          - Netdata (19999): {{ 'OPEN' if '19999' in nft_rules.stdout else 'CLOSED' }}

    - name: Check Vault connectivity
      ansible.builtin.uri:
        url: "http://{{ ansible_default_ipv4.address }}:8200/v1/sys/health"
        method: GET
        status_code: [200, 429, 472, 473, 501, 503]
      register: vault_health
      failed_when: false
      when: "'tag_server' in group_names or 'nomad-server' in ansible_hostname"

    - name: Display Vault status
      ansible.builtin.debug:
        msg: "Vault is {{ 'accessible' if vault_health.status is defined and vault_health.status in [200, 429, 472, 473, 501, 503] else 'not accessible' }} on {{ ansible_hostname }}"
      when: "'tag_server' in group_names or 'nomad-server' in ansible_hostname"
