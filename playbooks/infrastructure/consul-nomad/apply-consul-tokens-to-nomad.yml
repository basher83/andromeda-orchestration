---
# Apply Consul ACL tokens to Nomad configuration
# Usage: uv run ansible-playbook playbooks/infrastructure/consul-nomad/apply-consul-tokens-to-nomad.yml -i inventory/doggos-homelab/infisical.proxmox.yml

- name: Apply Consul Tokens to Nomad Configuration
  hosts: tag_nomad
  become: true
  vars:
    nomad_config_file: /etc/nomad.d/nomad.hcl
    nomad_server_token: "00b57268-c5f9-edb4-bc90-639fb4ab3232"
    nomad_client_token: "8e0c8f6d-8e00-8011-53f3-a0da44c305d4"

  tasks:
    - name: Get node type
      ansible.builtin.shell: |
        grep -q "^server {" {{ nomad_config_file }} && echo "server" || echo "client"
      register: node_type
      changed_when: false

    - name: Set appropriate token
      ansible.builtin.set_fact:
        consul_token: "{{ nomad_server_token if node_type.stdout == 'server' else nomad_client_token }}"

    - name: Update Consul stanza with token
      ansible.builtin.blockinfile:
        path: "{{ nomad_config_file }}"
        marker: "# {mark} ANSIBLE MANAGED CONSUL CONFIG WITH TOKEN"
        block: |
          consul {
            address = "127.0.0.1:8500"
            token = "{{ consul_token }}"

            # Enable service registration
            auto_advertise = true
            server_auto_join = true
            client_auto_join = true

            # Service names
            server_service_name = "nomad"
            client_service_name = "nomad-client"

            # Enable service checks
            checks_use_advertise = true

            # Keep existing identity settings
            service_identity {
              enabled = true
              auto    = true
            }

            task_identity {
              enabled = true
            }
          }
        state: present
        validate: "nomad config validate %s"
      register: config_updated

    - name: Restart Nomad if configuration changed
      ansible.builtin.systemd:
        name: nomad
        state: restarted
        daemon_reload: true
      when: config_updated.changed

    - name: Wait for Nomad to be ready
      ansible.builtin.wait_for:
        port: 4646
        host: "{{ ansible_default_ipv4.address }}"
        delay: 5
        timeout: 30
      when: config_updated.changed

- name: Verify Integration
  hosts: nomad-server-1-lloyd
  vars:
    consul_management_token: >-
      {{ (lookup('infisical.vault.read_secrets',
                 universal_auth_client_id=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID'),
                 universal_auth_client_secret=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET'),
                 project_id='7b832220-24c0-45bc-a5f1-ce9794a31259',
                 env_slug='dev',
                 path='/apollo-13/consul',
                 secret_name='CONSUL_MASTER_TOKEN')).value }}

  tasks:
    - name: Wait for services to register
      ansible.builtin.pause:
        seconds: 20

    - name: Check Consul for all services
      ansible.builtin.command: |
        consul catalog services -token={{ consul_management_token }}
      register: consul_services
      changed_when: false

    - name: Display registered services
      ansible.builtin.debug:
        msg:
          - "Registered services in Consul:"
          - "{{ consul_services.stdout_lines }}"

    - name: Check Nomad service details
      ansible.builtin.command: |
        consul catalog nodes -service=nomad -token={{ consul_management_token }}
      register: nomad_nodes
      changed_when: false
      failed_when: false

    - name: Check Nomad client service details
      ansible.builtin.command: |
        consul catalog nodes -service=nomad-client -token={{ consul_management_token }}
      register: nomad_client_nodes
      changed_when: false
      failed_when: false

    - name: Display Nomad server nodes in Consul
      ansible.builtin.debug:
        msg:
          - "Nomad servers registered:"
          - "{{ nomad_nodes.stdout_lines }}"
      when: nomad_nodes.rc == 0

    - name: Display Nomad client nodes in Consul
      ansible.builtin.debug:
        msg:
          - "Nomad clients registered:"
          - "{{ nomad_client_nodes.stdout_lines }}"
      when: nomad_client_nodes.rc == 0

    - name: Final status
      ansible.builtin.debug:
        msg: |
          {% if 'nomad' in consul_services.stdout or 'nomad-client' in consul_services.stdout %}
          ✅ SUCCESS: Consul-Nomad integration is working!
          Nomad services are now registered in Consul.
          {% else %}
          ❌ FAILED: Nomad services not found in Consul
          Check Nomad logs for errors.
          {% endif %}
