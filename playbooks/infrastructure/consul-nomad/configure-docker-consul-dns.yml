---
# Configure Docker to use Consul DNS (nftables version)
# This configures Docker daemon and Consul for .consul domain resolution
#
# NOTE: DNS redirection rules are now handled by nftables template
# in roles/system_base/templates/nftables.conf.j2
#
# Usage: uv run ansible-playbook playbooks/infrastructure/consul-nomad/configure-docker-consul-dns.yml -i inventory/doggos-homelab/infisical.proxmox.yml

- name: Configure Docker to use Consul DNS
  hosts: ~nomad-client.*
  become: true
  vars:
    docker_daemon_config: /etc/docker/daemon.json

  tasks:
    - name: Check current Docker daemon configuration
      ansible.builtin.stat:
        path: "{{ docker_daemon_config }}"
      register: docker_config_file

    - name: Read existing Docker daemon config
      ansible.builtin.slurp:
        src: "{{ docker_daemon_config }}"
      register: docker_config_content
      when: docker_config_file.stat.exists

    - name: Parse existing config or create new
      ansible.builtin.set_fact:
        docker_config: "{{ (docker_config_content.content | b64decode | from_json) if docker_config_file.stat.exists else {} }}"

    - name: Update Docker daemon config with Consul DNS
      ansible.builtin.set_fact:
        docker_config_updated: "{{ docker_config | combine({
          'dns': [ansible_default_ipv4.address],
          'dns-search': ['service.consul', 'node.consul'],
          'dns-opts': ['ndots:0']
        }) }}"

    - name: Write updated Docker daemon configuration
      ansible.builtin.copy:
        content: "{{ docker_config_updated | to_nice_json }}"
        dest: "{{ docker_daemon_config }}"
        backup: true
        mode: '0644'
      register: docker_config_changed

    - name: Configure systemd-resolved for Consul DNS (if using systemd-resolved)
      ansible.builtin.blockinfile:
        path: /etc/systemd/resolved.conf
        marker: "# {mark} ANSIBLE MANAGED - CONSUL DNS"
        block: |
          [Resolve]
          DNS=127.0.0.1:8600
          Domains=~consul
        backup: true
      register: resolved_config_changed
      failed_when: false

    - name: Create Consul DNS forward configuration
      ansible.builtin.copy:
        dest: /etc/consul.d/dns-forward.json
        content: |
          {
            "recursors": ["8.8.8.8", "1.1.1.1"],
            "dns_config": {
              "allow_stale": true,
              "max_stale": "5s",
              "node_ttl": "30s",
              "service_ttl": {
                "*": "5s"
              }
            }
          }
        mode: '0644'
        owner: consul
        group: consul
      register: consul_dns_config

    - name: Restart systemd-resolved if configured
      ansible.builtin.systemd:
        name: systemd-resolved
        state: restarted
      when: resolved_config_changed.changed
      failed_when: false

    - name: Reload Consul if DNS config changed
      ansible.builtin.systemd:
        name: consul
        state: reloaded
      when: consul_dns_config.changed

    - name: Restart Docker daemon if config changed
      ansible.builtin.systemd:
        name: docker
        state: restarted
        daemon_reload: true
      when: docker_config_changed.changed

    - name: Wait for Docker to be ready
      ansible.builtin.wait_for:
        path: /var/run/docker.sock
        state: present
        timeout: 30
      when: docker_config_changed.changed

    - name: Important notice about DNS redirection rules
      ansible.builtin.debug:
        msg:
          - "üî• IMPORTANT: DNS redirection rules for Docker containers are now managed by nftables!"
          - ""
          - "The following rules are automatically applied via nftables template:"
          - "- ip saddr 172.17.0.0/16 udp dport 53 dnat to {{ ansible_default_ipv4.address }}:8600"
          - "- ip saddr 172.17.0.0/16 tcp dport 53 dnat to {{ ansible_default_ipv4.address }}:8600"
          - ""
          - "If DNS resolution fails, ensure nftables configuration is up to date:"
          - "uv run ansible-playbook playbooks/infrastructure/network/update-nftables-traefik.yml -i inventory/doggos-homelab/infisical.proxmox.yml"

    - name: Test DNS resolution from Docker container
      ansible.builtin.shell: |
        docker run --rm alpine:latest nslookup consul.service.consul || echo "DNS resolution test failed"
      register: dns_test
      changed_when: false

    - name: Display DNS test results
      ansible.builtin.debug:
        msg:
          - "Host: {{ inventory_hostname }}"
          - "Docker DNS configured: {{ docker_config_changed.changed }}"
          - "DNS test result:"
          - "{{ dns_test.stdout_lines }}"
          - ""
          - "‚úÖ If DNS resolution works, configuration is complete!"
          - "‚ùå If DNS resolution fails, run the nftables update playbook."
