---
# Claim Netdata nodes to Netdata Cloud
# This playbook claims nodes to your Netdata Cloud space

- name: Claim Netdata nodes to cloud
  hosts: "{{ target_hosts | default('netdata_parents') }}"
  become: true
  gather_facts: true
  
  vars:
    netdata_claim_token: "{{ lookup('env', 'NETDATA_CLAIM_TOKEN') }}"
    netdata_claim_url: "{{ lookup('env', 'NETDATA_CLAIM_URL') | default('https://app.netdata.cloud') }}"
    netdata_claim_rooms: "{{ lookup('env', 'NETDATA_CLAIM_ROOMS') }}"
    
  tasks:
    - name: Ensure claim variables are set
      ansible.builtin.assert:
        that:
          - netdata_claim_token | length > 0
          - netdata_claim_rooms | length > 0
        fail_msg: "NETDATA_CLAIM_TOKEN and NETDATA_CLAIM_ROOMS must be set in environment"
    
    - name: Check if already claimed
      ansible.builtin.stat:
        path: /var/lib/netdata/cloud.d/claimed_id
      register: claim_status
    
    - name: Display claim status
      ansible.builtin.debug:
        msg: "Node {{ inventory_hostname }} is {{ 'already claimed' if claim_status.stat.exists else 'not claimed' }}"
    
    - name: Claim node to Netdata Cloud
      ansible.builtin.shell: |
        netdata-claim.sh \
          -token={{ netdata_claim_token }} \
          -url={{ netdata_claim_url }} \
          -rooms={{ netdata_claim_rooms }} \
          -noreload
      when: not claim_status.stat.exists
      register: claim_result
      ignore_errors: true
    
    - name: Alternative claim method using netdatacli
      ansible.builtin.shell: |
        netdatacli claim \
          -token={{ netdata_claim_token }} \
          -url={{ netdata_claim_url }} \
          -rooms={{ netdata_claim_rooms }}
      when: 
        - not claim_status.stat.exists
        - claim_result is failed
      register: claim_alt_result
      ignore_errors: true
    
    - name: Restart netdata after claiming
      ansible.builtin.systemd:
        name: netdata
        state: restarted
      when: 
        - not claim_status.stat.exists
        - (claim_result is succeeded) or (claim_alt_result is defined and claim_alt_result is succeeded)
    
    - name: Verify claim status
      ansible.builtin.stat:
        path: /var/lib/netdata/cloud.d/claimed_id
      register: final_status
    
    - name: Report final status
      ansible.builtin.debug:
        msg: 
          - "Node: {{ inventory_hostname }}"
          - "Claimed: {{ final_status.stat.exists }}"
          - "Claim ID: {{ lookup('file', '/var/lib/netdata/cloud.d/claimed_id', errors='ignore') | default('Not available') }}"
      when: final_status.stat.exists

- name: Summary report
  hosts: localhost
  gather_facts: false
  
  tasks:
    - name: Display completion message
      ansible.builtin.debug:
        msg:
          - "Netdata claiming process complete"
          - "Check your Netdata Cloud console for the nodes"
          - "URL: https://app.netdata.cloud"