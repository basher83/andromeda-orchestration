---
# Comprehensive Nomad cluster management playbook
- name: Nomad Cluster Management
  hosts: localhost
  gather_facts: false
  vars:
    nomad_addr: 'http://192.168.11.11:4646'
    nomad_cluster_action: "{{ nomad_action | default('status') }}"

  tasks:
    # Status check
    - name: Get cluster status
      when: nomad_cluster_action == "status"
      block:
        - name: Get leader
          ansible.builtin.uri:
            url: '{{ nomad_addr }}/v1/status/leader'
          register: leader

        - name: Get peers
          ansible.builtin.uri:
            url: '{{ nomad_addr }}/v1/status/peers'
          register: peers

        - name: Get nodes
          ansible.builtin.uri:
            url: '{{ nomad_addr }}/v1/nodes'
          register: nodes

        - name: Display status
          ansible.builtin.debug:
            msg:
              - 'Leader: {{ leader.json }}'
              - 'Peers: {{ peers.json }}'
              - "Nodes: {{ nodes.json | map(attribute='Name') | list }}"

    # Drain node
    - name: Drain node
      when: nomad_cluster_action == "drain"
      block:
        - name: Set node to drain
          ansible.builtin.command: |
            nomad node drain -enable {{ '-force' if force_drain | default(false) else '' }} {{ node_name | mandatory }}
          environment:
            NOMAD_ADDR: '{{ nomad_addr }}'
          changed_when: true
          register: drain_result

        - name: Show drain status
          ansible.builtin.debug:
            msg: 'Node {{ node_name }} set to drain'

    # Enable node
    - name: Enable node
      when: nomad_cluster_action == "enable"
      block:
        - name: Remove drain from node
          ansible.builtin.command: |
            nomad node drain -disable {{ node_name | mandatory }}
          environment:
            NOMAD_ADDR: '{{ nomad_addr }}'
          changed_when: true
          register: enable_result

        - name: Show enable status
          ansible.builtin.debug:
            msg: 'Node {{ node_name }} enabled'

    # List jobs
    - name: List jobs
      when: nomad_cluster_action == "jobs"
      block:
        - name: Get all jobs
          ansible.builtin.uri:
            url: '{{ nomad_addr }}/v1/jobs'
          register: jobs

        - name: Display jobs
          ansible.builtin.debug:
            msg:
              - 'Total jobs: {{ jobs.json | length }}'
              - "Jobs: {{ jobs.json | map(attribute='Name') | list }}"

    # Resource usage
    - name: Show resource usage
      when: nomad_cluster_action == "resources"
      block:
        - name: Get allocations
          ansible.builtin.uri:
            url: '{{ nomad_addr }}/v1/allocations'
          register: allocations

        - name: Calculate resource usage
          ansible.builtin.set_fact:
            used_cpu: >-
              {{ allocations.json | selectattr('ClientStatus', 'eq', 'running') |
                 map(attribute='Resources.CPU') | sum }}
            used_memory: >-
              {{ allocations.json | selectattr('ClientStatus', 'eq', 'running') |
                 map(attribute='Resources.MemoryMB') | sum }}

        - name: Display resource usage
          ansible.builtin.debug:
            msg:
              - >-
                Running allocations:
                {{ allocations.json | selectattr('ClientStatus', 'eq', 'running') |
                   list | length }}
              - 'Used CPU: {{ used_cpu }} MHz'
              - 'Used Memory: {{ used_memory }} MB'
# Usage examples:
# ansible-playbook playbooks/nomad/cluster-manage.yml
# ansible-playbook playbooks/nomad/cluster-manage.yml -e nomad_action=drain -e node_name=nomad-client-1
# ansible-playbook playbooks/nomad/cluster-manage.yml -e nomad_action=enable -e node_name=nomad-client-1
# ansible-playbook playbooks/nomad/cluster-manage.yml -e nomad_action=jobs
# ansible-playbook playbooks/nomad/cluster-manage.yml -e nomad_action=resources
