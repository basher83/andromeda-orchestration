---
# Update Nomad client configurations to register host volumes
# This playbook adds all provisioned volumes to the Nomad client configuration
#
# Usage:
# ansible-playbook playbooks/infrastructure/nomad/update-client-volumes.yml -i inventory/doggos-homelab/infisical.proxmox.yml

- name: Update Nomad Client Host Volume Configuration
  hosts: tag_client
  become: true
  
  vars:
    # Define all host volumes that should be configured
    host_volumes:
      - name: powerdns-mysql
        path: /opt/nomad/volumes/powerdns-mysql
        read_only: false
        
      - name: traefik-certs
        path: /opt/nomad/volumes/traefik-certs
        read_only: false
        
      - name: prometheus-data
        path: /opt/nomad/volumes/prometheus-data
        read_only: false
        
      - name: grafana-data
        path: /opt/nomad/volumes/grafana-data
        read_only: false
        
      - name: postgres-data
        path: /opt/nomad/volumes/postgres-data
        read_only: false
        
      - name: mysql-backup
        path: /opt/nomad/volumes/mysql-backup
        read_only: false
        
      # Keep the NFS volume that's already configured
      - name: nomad-volumes
        path: /mnt/nomad-volumes
        read_only: false
  
  tasks:
    - name: Check if Nomad configuration exists
      stat:
        path: /etc/nomad.d/nomad.hcl
      register: nomad_config
    
    - name: Read current Nomad configuration
      slurp:
        src: /etc/nomad.d/nomad.hcl
      register: current_config
      when: nomad_config.stat.exists
    
    - name: Backup current configuration
      copy:
        src: /etc/nomad.d/nomad.hcl
        dest: /etc/nomad.d/nomad.hcl.{{ ansible_date_time.epoch }}
        remote_src: true
      when: nomad_config.stat.exists
    
    - name: Create host volumes configuration snippet
      copy:
        content: |
          # Host volume configuration
          # Generated by Ansible on {{ ansible_date_time.iso8601 }}
          
          client {
            {% for volume in host_volumes %}
            host_volume "{{ volume.name }}" {
              path      = "{{ volume.path }}"
              read_only = {{ volume.read_only | lower }}
            }
            
            {% endfor %}
          }
        dest: /etc/nomad.d/host-volumes.hcl
        owner: nomad
        group: nomad
        mode: '0644'
    
    - name: Check if host volumes are already in main config
      set_fact:
        volumes_in_config: "{{ host_volumes | selectattr('name', 'in', current_config.content | b64decode) | list }}"
      when: nomad_config.stat.exists
    
    - name: Display volume configuration status
      debug:
        msg: |
          Total volumes to configure: {{ host_volumes | length }}
          Volumes already in config: {{ volumes_in_config | length if volumes_in_config is defined else 0 }}
          New volumes to add: {{ (host_volumes | length) - (volumes_in_config | length if volumes_in_config is defined else 0) }}
    
    - name: Validate Nomad configuration
      command: nomad config validate /etc/nomad.d/
      register: config_validation
      changed_when: false
      failed_when: false
    
    - name: Display validation result
      debug:
        var: config_validation.stdout_lines
      when: config_validation.stdout_lines is defined
    
    - name: Restart Nomad client service
      systemd:
        name: nomad
        state: restarted
        daemon_reload: true
      when: config_validation.rc == 0
      register: nomad_restart
    
    - name: Wait for Nomad to be ready
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:4646/v1/agent/health"
        method: GET
        status_code: 200
      register: nomad_health
      until: nomad_health.status == 200
      retries: 30
      delay: 2
      when: nomad_restart is changed
    
    - name: Verify host volumes are registered
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:4646/v1/node/{{ hostvars[inventory_hostname]['nomad_node_id'] | default('self') }}"
        method: GET
      register: node_info
      when: nomad_restart is changed
      failed_when: false
    
    - name: Display registered volumes
      debug:
        msg: "Registered host volumes: {{ node_info.json.HostVolumes.keys() | list }}"
      when: 
        - node_info is defined
        - node_info.json is defined
        - node_info.json.HostVolumes is defined
  
  post_tasks:
    - name: Summary
      debug:
        msg: |
          Nomad client volume configuration complete!
          
          Configuration file: /etc/nomad.d/host-volumes.hcl
          Backup created: {{ '/etc/nomad.d/nomad.hcl.' + ansible_date_time.epoch if nomad_config.stat.exists else 'N/A' }}
          
          Next steps:
          1. Verify volumes are available in Nomad UI
          2. Deploy services that use these volumes
          3. Monitor volume usage
          
          To verify manually:
          nomad node status -self