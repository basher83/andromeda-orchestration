---
# Consul Health Assessment using 1Password for ACL token
- name: Consul Cluster Health Assessment
  hosts: all
  gather_facts: true
  vars:
    consul_acl_token: >-
      {{ lookup('community.general.onepassword', 'Consul ACL - doggos-homelab',
                field='token', vault='DevOps') }}
    consul_dns_port: 8600
    consul_api_port: 8500
    report_dir: "{{ playbook_dir }}/../../reports/consul"
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}"

  tasks:
    - name: Create report directory
      ansible.builtin.file:
        path: "{{ report_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true

    - name: Check if Consul is installed
      ansible.builtin.command: which consul
      register: consul_installed
      failed_when: false
      changed_when: false

    - name: Get Consul version
      ansible.builtin.command: consul version
      register: consul_version_output
      when: consul_installed.rc == 0
      changed_when: false

    - name: Check Consul service status
      ansible.builtin.systemd:
        name: consul
        state: started
      register: consul_service
      failed_when: false

    - name: Get Consul cluster members
      ansible.builtin.command: consul members
      environment:
        CONSUL_HTTP_TOKEN: "{{ consul_acl_token }}"
      register: consul_members
      when: consul_installed.rc == 0
      changed_when: false

    - name: Check Consul leader
      ansible.builtin.command: consul operator raft list-peers
      environment:
        CONSUL_HTTP_TOKEN: "{{ consul_acl_token }}"
      register: consul_leader
      when: consul_installed.rc == 0
      changed_when: false

    - name: List Consul services
      ansible.builtin.command: consul catalog services
      environment:
        CONSUL_HTTP_TOKEN: "{{ consul_acl_token }}"
      register: consul_services
      when: consul_installed.rc == 0
      changed_when: false

    - name: Check Consul DNS port
      ansible.builtin.wait_for:
        port: "{{ consul_dns_port }}"
        host: "{{ ansible_default_ipv4.address }}"
        timeout: 5
      register: consul_dns_check
      failed_when: false

    - name: Test Consul DNS resolution
      ansible.builtin.command: dig @127.0.0.1 -p {{ consul_dns_port }} consul.service.consul +short
      register: consul_dns_test
      when: consul_installed.rc == 0
      changed_when: false

    - name: Compile node report
      ansible.builtin.set_fact:
        node_report:
          hostname: "{{ ansible_hostname }}"
          consul_installed: "{{ consul_installed.rc == 0 }}"
          consul_version: "{{ consul_version_output.stdout | default('Not installed') }}"
          consul_service_active: "{{ consul_service.status.ActiveState | default('unknown') == 'active' }}"
          consul_members: "{{ consul_members.stdout_lines | default([]) }}"
          consul_leader: "{{ consul_leader.stdout_lines | default([]) }}"
          consul_services: "{{ consul_services.stdout_lines | default([]) }}"
          consul_dns_listening: "{{ not consul_dns_check.failed | default(false) }}"
          consul_dns_working: "{{ consul_dns_test.stdout_lines | default([]) | length > 0 }}"
          timestamp: "{{ ansible_date_time.iso8601 }}"

    - name: Save individual node report
      ansible.builtin.copy:
        content: "{{ node_report | to_nice_yaml }}"
        dest: "{{ report_dir }}/consul_node_{{ ansible_hostname }}_{{ timestamp }}.yml"
        mode: '0644'
      delegate_to: localhost

- name: Generate Consul cluster summary report
  hosts: localhost
  gather_facts: true
  vars:
    report_dir: "{{ playbook_dir }}/../../reports/consul"
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}"

  tasks:
    - name: Read all node reports
      ansible.builtin.find:
        paths: "{{ report_dir }}"
        patterns: "consul_node_*_{{ timestamp }}.yml"
      register: node_reports

    - name: Load node data
      ansible.builtin.include_vars:
        file: "{{ item.path }}"
        name: "node_{{ item.path | basename | regex_replace('consul_node_(.+)_.*\\.yml', '\\1') }}"
      loop: "{{ node_reports.files }}"

    - name: Generate cluster summary
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/consul_cluster_summary.j2"
        dest: "{{ report_dir }}/consul_cluster_summary_{{ timestamp }}.md"
        mode: '0644'
      vars:
        all_nodes: >-
          {{ node_reports.files | map(attribute='path') | map('basename') |
             map('regex_replace', 'consul_node_(.+)_.*\.yml', '\1') | list }}
