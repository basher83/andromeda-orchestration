---
# Example playbook demonstrating Infisical secret retrieval
# This shows how to migrate from 1Password to Infisical

- name: Infisical Integration Demo
  hosts: localhost
  gather_facts: no
  vars:
    # Infisical configuration
    infisical_project_id: "7b832220-24c0-45bc-a5f1-ce9794a31259"
    infisical_environment: "prod"
    infisical_path: "/apollo-13"
    
    # These should be set as environment variables:
    # INFISICAL_UNIVERSAL_AUTH_CLIENT_ID
    # INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET
    # Or passed directly (not recommended for production)
    
  tasks:
    - name: Retrieve all secrets from apollo-13 folder
      set_fact:
        all_secrets: "{{ lookup('infisical.vault.read_secrets',
                         universal_auth_client_id=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID'),
                         universal_auth_client_secret=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET'),
                         project_id=infisical_project_id,
                         env_slug=infisical_environment,
                         path=infisical_path) }}"
      # no_log: true  # Temporarily disabled for debugging
    
    - name: Display available secret keys (for demo only)
      debug:
        msg: "Available secrets: {{ all_secrets | map(attribute='key') | list }}"
    
    - name: Retrieve specific Proxmox token secret
      set_fact:
        proxmox_token: "{{ lookup('infisical.vault.read_secrets',
                           universal_auth_client_id=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID'),
                           universal_auth_client_secret=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET'),
                           project_id=infisical_project_id,
                           env_slug=infisical_environment,
                           path=infisical_path,
                           secret_name='ANSIBLE_TOKEN_SECRET_DOGGOS') }}"
      # no_log: true  # Temporarily disabled for debugging
    
    - name: Use the secret (example)
      debug:
        msg: "Successfully retrieved Proxmox token"
      when: proxmox_token is defined