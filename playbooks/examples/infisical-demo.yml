---
# Example playbook demonstrating Infisical secret retrieval

- name: Infisical Integration Demo
  hosts: localhost
  gather_facts: false
  vars:
    # Infisical configuration
    infisical_project_id: '7b832220-24c0-45bc-a5f1-ce9794a31259'
    infisical_environment: 'prod'
    # Organized paths for different secret types
    proxmox_shared_path: '/apollo-13/proxmox'
    proxmox_og_path: '/apollo-13/proxmox/og-homelab'
    proxmox_doggos_path: '/apollo-13/proxmox/doggos-homelab'
    consul_path: '/apollo-13/consul'
    nomad_path: '/apollo-13/nomad'
    vault_path: '/apollo-13/vault'
    services_path: '/services'

    # These should be set as environment variables in .mise.local.toml:
    # INFISICAL_UNIVERSAL_AUTH_CLIENT_ID
    # INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET

  tasks:
    - name: Retrieve shared Proxmox secrets
      set_fact:
        proxmox_shared: "{{ lookup('infisical.vault.read_secrets',
          universal_auth_client_id=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID'),
          universal_auth_client_secret=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET'),
          project_id=infisical_project_id,
          env_slug=infisical_environment,
          path=proxmox_shared_path) }}"
      no_log: true

    - name: Display shared Proxmox secrets (demo only)
      debug:
        msg: "Shared secrets: {{ proxmox_shared | map(attribute='key') | list }}"

    - name: Retrieve cluster-specific Proxmox token
      set_fact:
        doggos_token: "{{ (lookup('infisical.vault.read_secrets',
          universal_auth_client_id=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID'),
          universal_auth_client_secret=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET'),
          project_id=infisical_project_id,
          env_slug=infisical_environment,
          path=proxmox_doggos_path,
          secret_name='ANSIBLE_TOKEN_SECRET_DOGGOS')).value }}"
      no_log: true

    - name: Retrieve Consul master token
      set_fact:
        consul_token: "{{ (lookup('infisical.vault.read_secrets',
          universal_auth_client_id=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID'),
          universal_auth_client_secret=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET'),
          project_id=infisical_project_id,
          env_slug=infisical_environment,
          path=consul_path,
          secret_name='CONSUL_MASTER_TOKEN')).value }}"
      no_log: true

    - name: Use the secret (example)
      debug:
        msg: 'Successfully retrieved Proxmox token'
      when: proxmox_token is defined
