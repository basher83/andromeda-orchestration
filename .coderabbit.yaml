# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json

# Review settings
reviews:
  # Request reviews for all pull requests
  request_changes_workflow: true
  high_level_summary: true
  poem: false
  review_status: true
  collapse_walkthrough: false

  # Auto-review PRs
  auto_review:
    enabled: true
    labels:
    ignore_title_keywords:
      - "WIP"
      - "DO NOT MERGE"
    drafts: false
    base_branches:
      - main
      - develop
      - feat
      - feature

  # Tool configurations for linting and security
  tools:
    # Python linting with ruff
    ruff:
      enabled: true

    # YAML linting
    yamllint:
      enabled: true

    # Shell script linting
    shellcheck:
      enabled: true

    # Markdown linting
    markdownlint:
      enabled: true

    # GitHub Actions workflow linting
    actionlint:
      enabled: true

    # GitHub checks integration
    github-checks:
      enabled: true

    # Secret detection
    gitleaks:
      enabled: true

    # Infrastructure as code security scanning
    checkov:
      enabled: true

    # Dockerfile linting
    hadolint:
      enabled: true

  # Path filters - what to review (exclusions use '!' prefix)
  path_filters:
    - "**/*.yml"
    - "**/*.yaml"
    - "**/*.py"
    - "**/*.j2"
    - "**/*.hcl"
    - "**/*.nomad"
    - "**/*.tf"
    - "**/*.md"
    - "**/Dockerfile"
    - "**/*.sh"
    - ".github/**"
    - "!**/*.lock"
    - "!**/package-lock.json"
    - "!**/.terraform.lock.hcl"
    - "!**/ansible.cfg"
    - "!docs/archive/**"
    - "!**/*.log"
    - "!**/*.tmp"
    - "!.venv/**"
    - "!venv/**"
    - "!__pycache__/**"

  # Review instructions specific to this project
  path_instructions:
    - path: "**/*"
      instructions: |
        Pay special attention to Ansible playbook syntax and best practices.
        Check for hardcoded secrets or credentials - all secrets should use Infisical or environment variables.
        Verify that NetBox API operations use proper error handling.
        Ensure Nomad job specifications follow HashiCorp best practices.
        Check that inventory files properly use dynamic inventory plugins.
        Validate that all playbooks use 'uv run' for execution as per CLAUDE.md.
        Ensure DNS and IPAM changes align with the implementation plan in docs/implementation/dns-ipam/.
        Verify Consul service definitions include proper health checks.
        Check that container-based deployments use appropriate resource limits.
        Ensure documentation is updated when infrastructure patterns change.

  # Automatic labeling instructions for PRs
  labeling_instructions:
    # Infrastructure and DevOps
    - label: "🏗️ infrastructure"
      instructions: "Apply when PR modifies infrastructure provisioning, Nomad jobs, Consul services, or cluster management"
    - label: "🏗️ terraform"
      instructions: "Apply when PR modifies Terraform configurations or Infrastructure as Code"
    - label: "🤖 ansible"
      instructions: "Apply when PR modifies Ansible playbooks, roles, or configuration management"
    - label: "🔧 crew-devops"
      instructions: "Apply when PR modifies infrastructure code, DevOps tooling, or operational processes"
    - label: "☁️ cloud"
      instructions: "Apply when PR involves cloud platform services, resources, or configurations"
    - label: "🌐 networking"
      instructions: "Apply when PR modifies network configuration, DNS, firewalls, or network security"
    - label: "💾 database"
      instructions: "Apply when PR modifies database operations, PostgreSQL, or data management"
    - label: "📱 container"
      instructions: "Apply when PR modifies Docker configurations, containerized applications, or container orchestration"

    # API and Integration
    - label: "⚡ api"
      instructions: "Apply when PR modifies NetBox API integration, inventory plugins, or external API integrations"
    - label: "🔌 mcp-server"
      instructions: "Apply when PR modifies Model Context Protocol server development or MCP integrations"
    - label: "🔄 automation"
      instructions: "Apply when PR adds workflow automation, process improvements, or task automation"

    # Security and Secrets
    - label: "🔒 security"
      instructions: "Apply when PR addresses security vulnerabilities, authentication, or authorization"
    - label: "🔐 secrets-mgmt"
      instructions: "Apply when PR modifies SOPS configuration, Infisical integration, or secrets management"
    - label: "🛡️ policy"
      instructions: "Apply when PR modifies OPA/Rego policies or infrastructure security policies"
    - label: "🔐 auth"
      instructions: "Apply when PR modifies authentication systems or authorization frameworks"

    # Monitoring and Observability
    - label: "📊 monitoring"
      instructions: "Apply when PR modifies Netdata, monitoring configurations, or observability systems"
    - label: "📈 metrics"
      instructions: "Apply when PR adds performance metrics, monitoring dashboards, or telemetry"
    - label: "💾 backup-restore"
      instructions: "Apply when PR modifies backup strategies, disaster recovery, or data protection"

    # Development and Code Quality
    - label: "🐛 bug"
      instructions: "Apply when PR fixes bugs, resolves issues, or corrects errors"
    - label: "✨ enhancement"
      instructions: "Apply when PR adds new features, capabilities, or improvements"
    - label: "🧹 refactor"
      instructions: "Apply when PR refactors code without changing functionality"
    - label: "⚡ performance"
      instructions: "Apply when PR includes performance optimization, caching, or efficiency improvements"
    - label: "💎 breaking-change"
      instructions: "Apply when PR introduces breaking changes to APIs, configurations, or interfaces"

    # Documentation and Configuration
    - label: "📚 documentation"
      instructions: "Apply when PR updates README.md, CLAUDE.md, or documentation in docs/ directory"
    - label: "📝 crew-docs"
      instructions: "Apply when PR significantly updates documentation or adds comprehensive guides"
    - label: "🔧 config"
      instructions: "Apply when PR modifies configuration files, settings, or environment configurations"
    - label: "📋 template"
      instructions: "Apply when PR adds or modifies templates, boilerplate code, or reusable patterns"

    # Dependencies and Automation
    - label: "📦 dependencies"
      instructions: "Apply when PR updates Python packages, Ansible collections, or dependency versions"
    - label: "🤖 renovate"
      instructions: "Apply when PR is created by Renovate bot for automated dependency updates"
    - label: "🤖 dependabot"
      instructions: "Apply when PR is created by Dependabot for automated security updates"
    - label: "🔄 ci-cd"
      instructions: "Apply when PR modifies GitHub workflows, CI/CD pipelines, or automation processes"

    # Testing and Quality
    - label: "🧪 testing"
      instructions: "Apply when PR adds or modifies tests, test automation, or testing infrastructure"
    - label: "🧪 staging"
      instructions: "Apply when PR affects staging environment or staging-specific configurations"
    - label: "🔍 linting"
      instructions: "Apply when PR modifies linting rules, code quality tools, or static analysis"

    # Platform and Environment Specific
    - label: "🌍 production"
      instructions: "Apply when PR affects production environment or production-critical systems"
    - label: "💻 development"
      instructions: "Apply when PR affects development environment or developer experience"
    - label: "🏠 local"
      instructions: "Apply when PR affects local development setup or local environment configuration"

    # Language and Tool Specific
    - label: "🐍 python"
      instructions: "Apply when PR modifies Python scripts, modules, or Python-based automation"
    - label: "🐚 shell"
      instructions: "Apply when PR modifies shell scripts, bash automation, or command-line tools"
    - label: "🔌 cli"
      instructions: "Apply when PR modifies command-line interfaces or CLI tool configurations"

    # Process and Workflow
    - label: "🏷️ auto-labeled"
      instructions: "Apply to all PRs to indicate CodeRabbit has automatically reviewed and labeled"
    - label: "🎯 mission-critical"
      instructions: "Apply when PR affects essential systems for project success and mission completion"
    - label: "🆘 emergency"
      instructions: "Apply when PR addresses critical system issues requiring immediate attention"

# Chat settings
chat:
  auto_reply: true

# Enable early access features
early_access: true
