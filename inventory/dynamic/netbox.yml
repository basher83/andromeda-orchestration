---
# NetBox dynamic inventory configuration
# This inventory connects to NetBox as the source of truth for infrastructure

plugin: netbox.netbox.nb_inventory
api_endpoint: https://192.168.30.213  # NetBox URL (LXC 213 on pve1)
validate_certs: false  # Set to true in production with proper certs

# API token retrieved from Infisical
token: >-
  {{ (lookup('infisical.vault.read_secrets',
             universal_auth_client_id=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_ID'),
             universal_auth_client_secret=lookup('env', 'INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET'),
             project_id='7b832220-24c0-45bc-a5f1-ce9794a31259',
             env_slug='staging',
             path='/apollo-13/services/netbox',
             secret_name='NETBOX_API_KEY')).value }}

# Enable caching to handle connection failures gracefully
cache: true
cache_plugin: ansible.builtin.jsonfile
cache_timeout: 86400  # 24 hours - use cached data if NetBox is unreachable
cache_connection: .ansible_cache/netbox
cache_prefix: netbox_inventory

# Grouping configuration
group_by:
  - device_roles  # Group by device role (e.g., server, switch, router)
  - sites        # Group by site (e.g., og-homelab, doggos-homelab)
  - platforms    # Group by platform (e.g., linux, proxmox)
  - tags         # Group by tags

# Create groups for specific attributes
keyed_groups:
  # Group by status
  - key: status
    prefix: status
    separator: "_"
  # Group by manufacturer
  - key: manufacturer
    prefix: manufacturer
    separator: "_"
  # Group by device type
  - key: device_type
    prefix: type
    separator: "_"

# Compose variables for hosts
compose:
  # Use the primary IP for ansible_host
  ansible_host: primary_ip4.address | default(primary_ip6.address) | regex_replace('/.*', '')
  # Add custom facts from NetBox custom fields
  # netbox_custom: custom_fields

# Query filters (optional)
# device_query_filters:
#   - has_primary_ip: true
#   - status: active

# Virtual machine filters (optional)
# virtual_machine_query_filters:
#   - status: active

# Flatten custom fields for easier access
flatten_custom_fields: true

# Include full device/VM details
fetch_all: true