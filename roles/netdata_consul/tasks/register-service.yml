---
- name: Create Consul service definition directory
  ansible.builtin.file:
    path: /etc/consul.d
    state: directory
    owner: consul
    group: consul
    mode: '0755'
  become: true

- name: Generate Consul service definition
  ansible.builtin.template:
    src: consul-service.json.j2
    dest: "/etc/consul.d/netdata.json"
    owner: consul
    group: consul
    mode: '0644'
  notify: reload consul
  become: true

- name: Register service via Consul API (alternative method)
  ansible.builtin.uri:
    url: "{{ netdata_consul_url }}/v1/agent/service/register"
    method: PUT
    headers:
      X-Consul-Token: "{{ netdata_consul_acl_token | default(omit) }}"
    body_format: json
    body:
      ID: "{{ netdata_consul_service_name }}-{{ ansible_hostname }}"
      Name: "{{ netdata_consul_service_name }}"
      Tags: "{{ netdata_consul_service_tags }}"
      Meta: "{{ netdata_consul_service_meta }}"
      Port: "{{ netdata_consul_service_port | int }}"
      Address: "{{ ansible_default_ipv4.address }}"
      EnableTagOverride: "{{ netdata_consul_enable_tag_override }}"
      Check:
        HTTP: "{{ netdata_consul_health_check_http }}"
        Interval: "{{ netdata_consul_health_check_interval }}"
        Timeout: "{{ netdata_consul_health_check_timeout }}"
    validate_certs: "{{ not netdata_consul_tls_skip_verify }}"
    status_code: [200]
  when: netdata_consul_health_check_enabled
  register: service_registration
  changed_when: true

- name: Verify service registration
  ansible.builtin.uri:
    url: "{{ netdata_consul_url }}/v1/agent/service/{{ netdata_consul_service_name }}-{{ ansible_hostname }}"
    method: GET
    headers:
      X-Consul-Token: "{{ netdata_consul_acl_token | default(omit) }}"
    validate_certs: "{{ not netdata_consul_tls_skip_verify }}"
  register: service_check
  failed_when: false

- name: Display service registration status
  ansible.builtin.debug:
    msg: "Netdata service {{ 'successfully registered' if service_check.status == 200 else 'registration failed' }} in Consul"
