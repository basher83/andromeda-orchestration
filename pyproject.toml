[project]
name = "andromeda-orchestration"
version = "0.1.0"
description = "Ansible automation with NetBox integration"
requires-python = ">=3.10"
dependencies = [
    "ansible-core>=2.15",
    "requests>=2.31",
    "pyyaml>=6.0",
    "jinja2>=3.1",
    "netaddr>=0.9",
    "python-dateutil>=2.8",
    "pynetbox>=7.0.0",
    "packaging>=21.0",
    "pytz>=2023.3",
    # Required by community.hashi_vault collection for Vault modules
    "hvac==2.3.0",
    "infisicalsdk>=1.0.11",
    "python-nomad>=2.1.0",
    # Required for HTTPS connections in Ansible
    "urllib3>=2.0.0",
    "certifi>=2023.0.0",  # CA certificates for SSL verification
    "cryptography>=41.0.0",  # Required for SSL/TLS operations
]

[project.optional-dependencies]
dev = [
    "ansible-lint>=24.2.0",
    "yamllint>=1.35.0",
    "pre-commit>=3.6.0",
    "pytest>=8.0.0",
    "pytest-ansible>=24.1.0",
    "molecule>=24.2.0",
    "molecule-plugins[docker]>=23.5.0",
    "ruff>=0.3.0",
    "mypy>=1.9.0",
    "types-requests>=2.31",
    "types-pyyaml>=6.0",
]

# Optional secrets integration (install only when needed)
secrets = [
    "infisicalsdk>=1.0.11",  # SDK for infisical.vault Ansible collection
]

[tool.ruff]
target-version = "py310"
line-length = 120
src = ["plugins", "scripts", "tests"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG"]
"plugins/lookup/*" = ["E402", "ARG002"]
"plugins/modules/*" = ["TID252"]  # Relative imports are valid for Ansible modules
"plugins/module_utils/*" = ["TID252"]  # Relative imports are valid for Ansible module utils
"docs/archive/*" = ["E402", "ARG002"]  # Archived code - not actively maintained

[tool.ruff.lint.isort]
known-first-party = ["plugins"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ansible.*",
    "pytest_ansible.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
markers = [
    "integration: Integration tests that require external services",
    "slow: Tests that take a long time to run",
]

[tool.coverage.run]
source = ["plugins", "scripts"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]

[build-system]
requires = ["setuptools>=69.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["plugins", "scripts"]
py-modules = []
